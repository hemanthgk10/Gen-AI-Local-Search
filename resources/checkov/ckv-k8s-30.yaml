category: Security
checkTool: checkov
checkType: Kubernetes
compliance:
- CIS
description: A security context defines privilege and access control settings for
  a Pod's init Container. This can be misused if not properly configured, so apply
  security context to your pod's init containers as well as per recommendations.
extra:
  entity: initContainers
guidelines: |-
  #### Description
  A security context defines privilege and access control settings for a Pod's init Container. This can be misused if not properly configured, so apply security context to your pod's init containers as well as per recommendations.

  #### Rationale
  A security context defines the operating system security settings (uid, gid, capabilities, SELinux role, etc..) applied to a container. When designing your containers and pods, make sure that you configure the security context for your pods, containers, and volumes. A security context is a property defined in the deployment yaml. It controls the security parameters that will be assigned to the pod/container/volume. There are two levels of security context: pod level security context, and container level security context.

  #### Remediation
  Follow the Kubernetes documentation and apply security contexts to your pods. For a suggested list of security contexts, you may refer to the CIS Security Benchmark for Docker Containers.

  Example of a Pod is given below. We want to make sure that, we don't assign more priviliges than required.

  ```yaml
  apiVersion: v1
  kind: Pod
  metadata:
    name: view-pid
  spec:
    containers:
    - name: view-pid
      image: discr33t/discr33t-centos:v0.1.3
  +   securityContext:
  +     allowPrivilegeEscalation: false
      ...
      ...
    initContainers:
    - image: nginx-preconfig
      name: configeditor
  +   securityContext:
  +     allowPrivilegeEscalation: false
      ...
      ...
  ```

  #### References
  * https://kubernetes.io/docs/concepts/policy/security-context/
  * https://learn.cisecurity.org/benchmarks
provider: Kubernetes
ruleId: CKV_K8S_30
severity: Medium
sid: ckv-k8s-30
title: Apply security context to your pods and containers
autofix: true
remediation:
- checkType: Kubernetes
  steps:
  - action: add
    resource: [ "Pod", "Deployment", "ReplicaSet", "StatefulSet", "DaemonSet", "Job", "CronJob", "ReplicationController" ]
    resourceAttribute: securityContext.allowPrivilegeEscalation
    resourceAttributeType: nestedBlock
    resourceAttributeValue: "false"
    resourceType: [ "initContainers", "containers" ]
