---
category: Security
checkTool: checkov
checkType: CloudFormation
compliance: []
description: |-
    Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. When we create a web application, we specify one or more CloudFront distributions to delivery the data, videos, applications and APIs to customers globally with low latency, high transfer speeds, all within a developer-friendly environment. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a request is received, CloudFront delivers it to the nearest edge location to provide low latency.
    Ensure that the communication between Amazon CloudFront CDN distribution and its viewers is encrypted using HTTPS in order to secure the delivery of application content. To encryption the data in transit, configure the web distribution viewer protocol policy to redirect HTTP requests to HTTPS requests or force the viewers to use only the HTTPS protocol to access content available in the CloudFront distribution cache.
extra:
  entity: "AWS::CloudFront::Distribution"
  type: resource
guidelines: |-
    #### Description
    Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. When we create a web application, we specify one or more CloudFront distributions to delivery the data, videos, applications and APIs to customers globally with low latency, high transfer speeds, all within a developer-friendly environment. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a request is received, CloudFront delivers it to the nearest edge location to provide low latency.

    Ensure that the communication between Amazon CloudFront CDN distribution and its viewers is encrypted using HTTPS in order to secure the delivery of application content. To encryption the data in transit, configure the web distribution viewer protocol policy to redirect HTTP requests to HTTPS requests or force the viewers to use only the HTTPS protocol to access content available in the CloudFront distribution cache.

    #### Rationale
    Allowing a HTTP request to the content in CloudFront distribution cache can cause a security breach. The data should be encrypted even in transit to avoid any spoofing attack.

    #### Remediation
    Ensure that `viewer_protocol_policy` is set to `https-only` or `redirect-to-https`.

    Terraform example:
    ```
    resource "aws_cloudfront_distribution" "s3_distribution" {
        origin {
          domain_name = aws_s3_bucket.b.bucket_regional_domain_name
          origin_id   = local.s3_origin_id

          s3_origin_config {
            origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
          }
        }
        enabled      = true
        default_cache_behavior {
    +      viewer_protocol_policy = "https-only"
           ...
           ...
        }
        ordered_cache_behavior {
    +     viewer_protocol_policy = "redirect-to-https"
          ...
          ...
        }
    }
    ```

    Cloudformation example:
    ```json
    {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Resources": {
        "myDistribution": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Origins": [{
                "DomainName": "mybucket.s3.amazonaws.com",
                "Id": "myS3Origin",
                "S3OriginConfig": {
                  "OriginAccessIdentity": "origin-access-identity/cloudfront/E127EXAMPLE51Z"
                }
              }],
              "Enabled": "true",
              "DefaultCacheBehavior": {
    +             "ViewerProtocolPolicy": "https-only",
                ...
                ...
              },
              "ordered_cache_behavior": {
    +            "ViewerProtocolPolicy": "redirect-to-https",
                ...
                ...
              }
              ...
              ...
            }
          }
        }
      }
    }
    ```

    #### References
    * https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy
    * https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html
lwid: []
provider: AWS
ruleId: CKV_AWS_34
severity: Critical
sid: ckv-aws-34
title: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
autofix: true
remediation:
- checkType: Terraform
  steps:
  - action: add
    resource: [ "resource" ]
    resourceAttribute: default_cache_behavior.viewer_protocol_policy
    resourceAttributeType: blockAttribute
    resourceAttributeValue: "https-only"
    resourceType: [ "aws_cloudfront_distribution" ]
  - action: add
    resource: [ "resource" ]
    resourceAttribute: ordered_cache_behavior.viewer_protocol_policy
    resourceAttributeType: blockAttribute
    resourceAttributeValue: "redirect-to-https"
    resourceType: [ "aws_cloudfront_distribution" ]
