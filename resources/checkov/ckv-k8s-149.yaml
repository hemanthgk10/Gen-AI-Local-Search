---
category: Security
checkTool: checkov
checkType: Kubernetes
compliance:
  - CIS
description: |-
    Kubernetes is an open source platform for orchestrating containers. A container is a technology that lets you bundle and isolate applications with their entire runtime environment so that it’s easy to move the contained application between stages (development, production, etc.) and environments (on-premise, public cloud, private cloud, hybrid cloud, or multicloud) while retaining full functionality.

    kubelet is the primary "node agent" that runs on each node in a Kubernetes cluster. The kubelet works in terms of a PodSpec. A PodSpec is a YAML or JSON object that describes a pod. The kubelet takes a set of PodSpecs that are provided through various mechanisms (primarily through the apiserver) and ensures that the containers described in those PodSpecs are running and healthy.

    By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of `system:anonymous` and a group of `system:unauthenticated`. Using certificate based authentication provides extra security for the communication of kubelets with it's clients.

    Kubelet has the option to automatically rotate the certificates required for the encrypted communication. It is recommended to keep this option enabled.
extra:
  entity: containers
  type: resource
guidelines: |-
    #### Description
    Kubernetes is an open source platform for orchestrating containers. A container is a technology that lets you bundle and isolate applications with their entire runtime environment so that it’s easy to move the contained application between stages (development, production, etc.) and environments (on-premise, public cloud, private cloud, hybrid cloud, or multicloud) while retaining full functionality.

    kubelet is the primary "node agent" that runs on each node in a Kubernetes cluster. The kubelet works in terms of a PodSpec. A PodSpec is a YAML or JSON object that describes a pod. The kubelet takes a set of PodSpecs that are provided through various mechanisms (primarily through the apiserver) and ensures that the containers described in those PodSpecs are running and healthy.

    By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of `system:anonymous` and a group of `system:unauthenticated`. Using certificate based authentication provides extra security for the communication of kubelets with it's clients.

    Kubelet has the option to automatically rotate the certificates required for the encrypted communication. It is recommended to keep this option enabled.

    #### Rationale
    The `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.

    **Note:** This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.

    **Note:** This feature also require the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7)

    #### Audit
    Run the following command on each node:
    ```
     ps -ef | grep kubelet
    ```
    Verify that the `--rotate-certificates` argument is not present, or is set to `true`.

    If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by ``--config`, that file does not contain `rotateCertificates: false`.

    #### Remediation
    If using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value.

    If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable.

    Based on your system, restart the `kubelet` service. For example:
    ```
       systemctl daemon-reload
       systemctl restart kubelet.service
    ```

    By default, kubelet client certificate rotation is enabled.

    Example of Kubelet Configuration file:
    ```yaml
         apiVersion: kubelet.config.k8s.io/v1beta1
         kind: KubeletConfiguration
         address: 0.0.0.0
         authentication:
            anonymous:
              enabled: false
            x509:
              clientCaFile: "/etc/kubelet/pki/ca.crt"
         evictionHard:
            memory.available:  "200Mi"
         podCIDR: 10.200.0.0/16
         authorization:
            mode: Webhook
         maxPods: 200
         readOnlyPort: 0
         tlsCertFile: "/etc/kubelet/pki/server/request.crt"
         tlsPrivateKeyFile: "/etc/kubelet/pki/server/request.key"
    -    rotateCertificates: false
    +    rotateCertificates: true
         ...
         ...
    ```

    #### References
    * https://kubernetes.io/docs/admin/kubelet/
    * https://github.com/kubernetes/kubernetes/pull/41912
    * https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration
    * https://kubernetes.io/docs/imported/release/notes/
    * https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates

    #### CIS Controls
    **Version 6**
      *14.2 Encrypt All Sensitive Information Over Less-trusted Networks* -- All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.

      *14.4 Encrypt All Sensitive Information in Transit*
provider: Kubernetes
ruleId: CKV_K8S_149
severity: Medium
sid: ckv-k8s-149
title: "Ensure that the --rotate-certificates argument is not set to false"
