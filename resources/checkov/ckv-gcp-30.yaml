category: IAM
checkTool: checkov
checkType: Terraform
compliance:
- CIS
description: Ensure that instances are not configured to use the default service account
extra:
  entity: google_compute_instance
  type: resource
guidelines: |-
  #### Description
  To support principle of least privileges and prevent potential privilege escalation it is recommended that instances are not assigned to default service account `Compute Engine default service account` with Scope `Allow full access to all Cloud APIs`.

  #### Rationale
  Along with ability to optionally create, manage and use user managed custom service accounts, Google Compute Engine provides default service account Compute Engine default service account for an instances to access necessary cloud services. Project Editor role is assigned to Compute Engine default service account hence, This service account has almost all capabilities over all cloud services except billing. However, when Compute Engine default service account assigned to an instance it can operate in 3 scopes.

    * Allow default access: Allows only minimum access required to run an Instance (Least Privileges)
    * Allow full access to all Cloud APIs: Allow full access to all the cloud APIs/Services (Too much access)
    *  Set access for each API: Allows Instance administrator to choose only those APIs that are needed to perform specific business functionality expected by instance.

  When an instance is configured with Compute Engine default service account with Scope Allow full access to all Cloud APIs, based on IAM roles assigned to the user(s) accessing Instance, it may allow user to perform cloud operations/API calls that user is not supposed to perform leading to successful privilege escalation.

  #### Impact
  In order to change service account or scope for an instance, it needs to be stopped.

  #### Remediation
  While creating a VM instance, default service account is used with scope `Allow default access`.

  Terraform example
  ```
  resource "google_compute_instance" "default" {
      name         = "example"
      machine_type = "e2-medium"
      zone         = "us-central1-a"
      service_account {
  -     email  = "sample-compute@developer.gserviceaccount.com"
  +     email  = "not-default-service-account"
  +     scopes = ["userinfo-email", "compute-ro", "storage-ro"]
      }
      ...
      ...
  }
  ```

  From *Console*
     1. Go to the VM instances page in the [Compute Engine](https://console.cloud.google.com/compute/instances)
     2. Click on the impacted VM instance.
     3. If the instance is not stopped, click the `Stop` button. Wait for the instance to be stopped.
     4. Next, click the `Edit` button.
     5. Scroll down to the `Service Account` section.
     6. To change scopes, in the `Access scopes` section, set the appropriate scopes as per business needs.
     7. Click the `Save` button to save your changes.

  From CLI
  Set service account scope for an instance
  ```
  gcloud compute instances set-service-account [Instance_name] --serviceaccount [service_account_email] --scopes [scope1, scope2...]
  ```

  #### References
  * https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances
  * https://cloud.google.com/compute/docs/access/service-accounts
  * https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#service_account

  #### Notes
  * User IAM roles will override service account scope but configuring minimal scope ensures defense in depth.
  * Non-default service accounts do not offer selection of access scopes like default service account. IAM roles with non-default service accounts should be used to control VM access.
lwid:
  - GCP_CIS12_4_1
provider: GCP
ruleId: CKV_GCP_30
severity: Medium
sid: ckv-gcp-30
title: Ensure that instances are not configured to use the default service account
