---
category: IAM
checkTool: checkov
checkType: Terraform
compliance: []
description: "Ensure IAM policies don't allow IAM users with data exfiltration actions that allow certain read-only IAM actions without resource constraints, such as s3:GetObject, ssm:GetParameter*, or secretsmanager:GetSecretValue."
extra:
  entity: aws_iam_policy_document
  type: resource
guidelines: |-
    #### Description
    AWS IAM policies are JSON-formatted objects that specify actions and resources on which those actions can be taken. The policy is then attached to a resource, such as a user account, EC2 instance, or internal AWS function, allowing that resource to make API calls to execute actions within the account.

    Ensure IAM policies don't allow IAM users with data exfiltration actions that allow certain read-only IAM actions without resource constraints, such as s3:GetObject, ssm:GetParameter*, or secretsmanager:GetSecretValue.

    * Unrestricted `s3:GetObject` permissions has a long history of customer data leaks.
    * `ssm:GetParameter*` and `secretsmanager:GetSecretValue` are both used to access secrets.
    * `rds:CopyDBSnapshot` and `rds:CreateDBSnapshot` can be used to exfiltrate RDS database contents.

    #### Rationale
    Ensure that IAM policies doesn't contain actions that allow data exfiltration actions allow certain read-only IAM actions without resource constraints, such as `s3:GetObject`, `ssm:GetParameter*`, or `secretsmanager:GetSecretValue`.

    #### Remediation
    Avoid actions in the IAM policy, that can allow data exfiltration actions allow certain read-only IAM actions without resource constraints, such as `s3:GetObject`, `ssm:GetParameter*`, or `secretsmanager:GetSecretValue`.

    Terraform example
    ```
    data "aws_iam_policy_document" "example" {
        statement {
           sid = "1"
           actions = [
             "s3:ListAllMyBuckets",
             "s3:GetBucketLocation",
    -        "secretsmanager:GetSecretValue",
    -        "s3:GetObject"
           ]

        }
        ...
        ...
    }
    ```

    CloudFormation example:
    ```
    {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyDocument" : {
          "Version": "2020-10-17",
          "Statement": [
              {
                  "Sid": "AllowAllUsersToListAccounts",
                  "Effect": "Allow",
                  "Action": [
    -                 "secretsmanager:GetSecretValue",
    -                 "s3:GetObject",
                      "s3:ListAllMyBuckets",
                      "s3:GetBucketLocation"
                   ],
                  ...
                  ...
              }
          ]
        },
        "PolicyName" : "s3-default-bucket-policy",
        ...
        ...
      }
    }
    ```

    Manual Steps:
    1. Navigate to [Identity and Access Management][iam-console]
    2. In the left navigation, select `Policies`.
    3. Select the Policy and edit the document to define only the explicit permissions necessary for the role.
    4. Repeat for each policy, remove the actions that can allow data exfiltration.

    #### References
    * https://cloudsplaining.readthedocs.io/en/latest/glossary/data-exfiltration/

    [iam-console]: https://console.aws.amazon.com/iam/
lwid: []
provider: AWS
ruleId: CKV_AWS_108
severity: High
sid: ckv-aws-108
title: "Ensure IAM policies does not allow data exfiltration"
