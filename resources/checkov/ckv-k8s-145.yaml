---
category: Security
checkTool: checkov
checkType: Kubernetes
compliance:
  - CIS
description: |-
    Kubernetes is an open source platform for orchestrating containers. A container is a technology that lets you bundle and isolate applications with their entire runtime environment so that it’s easy to move the contained application between stages (development, production, etc.) and environments (on-premise, public cloud, private cloud, hybrid cloud, or multicloud) while retaining full functionality.

    kubelet is the primary "node agent" that runs on each node in a Kubernetes cluster. The kubelet works in terms of a PodSpec. A PodSpec is a YAML or JSON object that describes a pod. The kubelet takes a set of PodSpecs that are provided through various mechanisms (primarily through the apiserver) and ensures that the containers described in those PodSpecs are running and healthy.

    Enabling the flag `makeIPTablesUtilChains` to `true`, will allow the Kubeletes to manage iptables.
extra:
  entity: containers
  type: resource
guidelines: |-
    #### Description
    Kubernetes is an open source platform for orchestrating containers. A container is a technology that lets you bundle and isolate applications with their entire runtime environment so that it’s easy to move the contained application between stages (development, production, etc.) and environments (on-premise, public cloud, private cloud, hybrid cloud, or multicloud) while retaining full functionality.

    kubelet is the primary "node agent" that runs on each node in a Kubernetes cluster. The kubelet works in terms of a PodSpec. A PodSpec is a YAML or JSON object that describes a pod. The kubelet takes a set of PodSpecs that are provided through various mechanisms (primarily through the apiserver) and ensures that the containers described in those PodSpecs are running and healthy.

    Enabling the flag `makeIPTablesUtilChains` to `true`, will allow the Kubeletes to manage iptables.

    #### Rationale
    Kubelets can automatically manage the required changes to iptables based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to iptables. This ensures that the iptables configuration remains in sync with pods networking configuration. Manually configuring iptables with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have iptables rules too restrictive or too open.

    #### Audit
    Run the following command on each node:
    ```
     ps -ef | grep kubelet
    ```
    Verify that the `--make-iptables-util-chains` argument exists then it is set to `true`.

    If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.

    #### Remediation
    If using a Kubelet config file, edit the file to set `makeIPTablesUtilChains: true`.

    If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the ``--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable.

    Based on your system, restart the `kubelet` service. For example:
    ```
       systemctl daemon-reload
       systemctl restart kubelet.service
    ```

    By default, `--make-iptables-util-chains` argument is set to true.

    Example of Kubelet Configuration file:
    ```yaml
         apiVersion: kubelet.config.k8s.io/v1beta1
         kind: KubeletConfiguration
         address: 0.0.0.0
         authentication:
            anonymous:
              enabled: false
            x509:
              clientCaFile: "/etc/pf9/kube.d/certs/kubelet/server/ca.crt"
         evictionHard:
            memory.available:  "200Mi"
         podCIDR: 10.200.0.0/16
         authorization:
            mode: Webhook
         maxPods: 200
         readOnlyPort: 0
    +    makeIPTablesUtilChains: true
         ...
         ...
    ```

    #### Impact
    Kubelet would manage the iptables on the system and keep it in sync. If you are using any other iptables management solution, then there might be some conflicts.

    #### References
    * https://kubernetes.io/docs/admin/kubelet/

    #### CIS Controls:
    **Version 6**
      *9 Limitation and Control of Network Ports, Protocols, and Services* -- Limitation and Control of Network Ports, Protocols, and Services.
provider: Kubernetes
ruleId: CKV_K8S_145
severity: Medium
sid: ckv-k8s-145
title: "Ensure that the --make-iptables-util-chains argument is set to true"
