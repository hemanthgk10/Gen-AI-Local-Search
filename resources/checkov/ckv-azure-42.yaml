---
category: Secrets
checkTool: checkov
checkType: Terraform
compliance:
  - CIS
  - HIPAA
description: "Ensure the key vault is recoverable"
extra:
  entity: Microsoft.KeyVault/vaults
  type: resource
guidelines: |-
    #### Description
    The key vault contains object keys, secrets and certificates. Accidental unavailability of a key vault can cause immediate data loss or loss of security functions (authentication, validation, verification, non-repudiation, etc.) supported by the key vault objects.
    It is recommended the key vault be made recoverable by enabling the "Do Not Purge" and "Soft Delete" functions. This is in order to prevent loss of encrypted data including storage accounts, SQL databases, and/or dependent services provided by key vault objects (Keys, Secrets, Certificates) etc., as may happen in the case of accidental deletion by a user or from disruptive activity by a malicious user.

    #### Rationale
    There could be scenarios where users accidently run delete/purge commands on key vault or attacker/malicious user does it deliberately to cause disruption. Deleting or purging a key vault leads to immediate data loss as keys encrypting data and secrets/certificates allowing access/services will become non-accessible. There are 2 key vault properties that plays role in permanent unavailability of a key vault.
      1. enableSoftDelete:
           Setting this parameter to true for a key vault ensures that even if key vault is deleted, Key vault itself or its objects remain recoverable for next 90days. In this span of 90 days either key vault/objects can be recovered or purged (permanent deletion). If no action is taken, after 90 days key vault and its objects will be purged.
      2. enablePurgeProtection:
          enableSoftDelete only ensures that key vault is not deleted permanently and will be recoverable for 90 days from date of deletion. However, there are chances that the key vault and/or its objects are accidentally purged and hence will not be recoverable. Setting enablePurgeProtection to "true" ensures that the key vault and its objects cannot be purged.
          Enabling both the parameters on key vaults ensures that key vaults and their objects cannot be deleted/purged permanently.

    #### Remediation
    When a new `keyvault` is created, both the parameters `enableSoftDelete` and `enablePurgeProtection` are set to `null` disabling both the features. So enable them manually.

    Terraform example
    ```
      resource "azurerm_key_vault" "example" {
          name                        = "testvault"
          location                    = azurerm_resource_group.example.location
          resource_group_name         = azurerm_resource_group.example.name
    +     soft_delete_enabled         = true
    +     purge_protection_enabled    = false
          ...
          ...
      }
    ```

    To enable "Do Not Purge" and "Soft Delete" for a Key Vault:

    From *Azure Portal*
    Azure Portal does not have provision to update the respective configurations

    From *Azure CLI 2.0*
    ```
    az resource update --id /subscriptions/xxxxxx-xxxx-xxxx-xxxx- xxxxxxxxxxxx/resourceGroups/<resourceGroupName>/providers/Microsoft.KeyVault /vaults/<keyVaultName> --set properties.enablePurgeProtection=true properties.enableSoftDelete=true
    ```

    #### References
    * https://docs.microsoft.com/en-us/azure/key-vault/key-vault-soft-delete-cli
    * https://blogs.technet.microsoft.com/kv/2017/05/10/azure-key-vault-recovery-options/
    * https://docs.microsoft.com/en-us/azure/security/benchmarks/security-controls-v2-governance-strategy#gs-8-define-backup-and-recovery-strategy

    #### Additional Information
    When a key is used for SQL server TDE or Encrypting Storage Account, for corresponding key vault both the features `Do Not Purge` and `Soft Delete` are enabled by default by Azure Backend.
lwid:
  - Azure_CIS_131_8_4
provider: Azure
ruleId: CKV_AZURE_42
severity: Medium
sid: ckv-azure-42
title: "Ensure the key vault is recoverable"
