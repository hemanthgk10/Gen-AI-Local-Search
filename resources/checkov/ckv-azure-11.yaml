---
category: Network
checkTool: checkov
checkType: Terraform
compliance:
  - CIS
  - HIPAA
description: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
extra:
  entity: Microsoft.Sql/servers
  type: resource
guidelines: |-
    #### Description
    Ensure that no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP).

    #### Rationale
    SQL Server includes a firewall to block access to unauthorized connections. More granular IP addresses can be defined by referencing the range of addresses available from specific datacenters.
    By default, for a SQL server, a Firewall exists with StartIp of 0.0.0.0 and EndIP of 0.0.0.0 allowing access to all the Azure services.
    Additionally, a custom rule can be set up with StartIp of 0.0.0.0 and EndIP of 255.255.255.255 allowing access from ANY IP over the Internet.
    In order to reduce the potential attack surface for a SQL server, firewall rules should be defined with more granular IP addresses by referencing the range of addresses available from specific datacenters.

    #### Remediation

    Azure Console
      1. Go to SQL servers
      2. For each SQL server
      3. Click on Firewall / Virtual Networks
      4. Set Allow access to Azure services to `OFF'
      5. Set firewall rules to limit access to only authorized connections

    Azure PowerShell

    Disable Default Firewall Rule Allow access to Azure services : Remove-AzureRmSqlServerFirewallRule -FirewallRuleName "AllowAllWindowsAzureIps" -ResourceGroupName <resource group name> - ServerName <server name>
    Remove custom Firewall rule:

    ```
    Remove-AzureRmSqlServerFirewallRule -FirewallRuleName "<firewallRuleName>" - ResourceGroupName <resource group name> -ServerName <server name>
    ```

    Set the appropriate firewall rules:

    ```
    Set-AzureRmSqlServerFirewallRule -ResourceGroupName <resource group name> - ServerName <server name> -FirewallRuleName "<Fw rule Name>" -StartIpAddress
    "<IP Address other than 0.0.0.0>" -EndIpAddress "<IP Address other than 0.0.0.0 or 255.255.255.255>"
    ```

    By default, setting Allow access to Azure Services is set to ON allowing access to all Windows Azure IP ranges.

    #### References
    * https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access?view=sql-server-2017
    * https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/get-azurermsqlserverfirewallrule?view=azurermps-5.2.0
    * https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/set-azurermsqlserverfirewallrule?view=azurermps-5.2.0
    * https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/remove-azurermsqlserverfirewallrule?view=azurermps-5.2.0
    * https://docs.microsoft.com/en-us/azure/sql-database/sql-database-firewall-configure
    * https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-set-database-firewall-rule-azure-sql-database?view=azuresqldb-current

    #### Additional Information
    Firewall rules configured on individual SQL Database using Transact-sql overrides the rules set on SQL server. Azure does not provides any Powershell, API, CLI, Portal option to check database level firewall rules and so far Transact-SQL is the only way to check for the same. For comprehensive control over egress traffic on SQL Databases, Firewall rules should be checked using SQL client.
lwid:
  - Azure_CIS_131_6_3
provider: Azure
ruleId: CKV_AZURE_11
severity: Critical
sid: ckv-azure-11
title: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
