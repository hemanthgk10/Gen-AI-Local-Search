---
category: "Backup & Recovery"
checkTool: checkov
checkType: Terraform
compliance: []
description: |-
    Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the AWS Cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks.

    When you provision a Multi-AZ DB Instance, Amazon RDS automatically creates a primary DB Instance and synchronously replicates the data to a standby instance in a different Availability Zone (AZ). Each AZ runs on its own physically distinct, independent infrastructure, and is engineered to be highly reliable. In case of an infrastructure failure, Amazon RDS performs an automatic failover to the standby.
extra:
  entity: aws_db_instance
  type: resource
guidelines: |-
    #### Description
    Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the AWS Cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks.

    When you provision a Multi-AZ DB Instance, Amazon RDS automatically creates a primary DB Instance and synchronously replicates the data to a standby instance in a different Availability Zone (AZ). Each AZ runs on its own physically distinct, independent infrastructure, and is engineered to be highly reliable. In case of an infrastructure failure, Amazon RDS performs an automatic failover to the standby.

    #### Rationale
    Amazon RDS Multi-AZ deployments provide enhanced availability and durability for RDS database (DB) instances, making them a natural fit for production database workloads.

    #### Remediation
    Set the `multi_az` to specify whether the database instance is a multiple Availability Zone deployment.

    Terraform example
    ```
    resource "aws_db_instance" "default" {
        allocated_storage    = 10
        engine               = "mysql"
        engine_version       = "5.7"
        instance_class       = "db.t3.micro"
        parameter_group_name = "default.mysql5.7"
        skip_final_snapshot  = true
    +   multi_az             = true
        ...
        ...
    }
    ```

    CloudFormation example
    ```json
    {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
          "AllocatedStorage" : "10",
    +     "MultiAZ" : true,
          ...
          ...
      }
    }
    ```

    #### References
    * https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#multi_az
    * https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html
    * https://aws.amazon.com/rds/features/multi-az/
lwid: []
provider: AWS
ruleId: CKV_AWS_157
severity: Medium
sid: ckv-aws-157
title: "Ensure that RDS instances have Multi-AZ enabled"
