category: Security
checkTool: checkov
checkType: Terraform
compliance:
- CIS
description: Periodically, newer versions are released for HTTP either due to security
  flaws or to include additional functionality. Using the latest HTTP version for
  web apps to take advantage of security fixes, if any, and/or new functionalities
  of the newer version.
extra:
  entity: Microsoft.Web/sites
  type: resource
guidelines: |-
  #### Description
  Periodically, newer versions are released for HTTP either due to security flaws or to include additional functionality. Using the latest HTTP version for web apps to take advantage of security fixes, if any, and/or new functionalities of the newer version.

  #### Rationale
  Newer versions may contain security enhancements and additional functionality. Using the latest version is recommended in order to take advantage of enhancements and new capabilities. With each software installation, organizations need to determine if a given update meets their requirements and also verify the compatibility and support provided for any additional software against the update revision that is selected.
  HTTP 2.0 has additional performance improvements on the head-of-line blocking problem of old HTTP version, header compression, and prioritization of requests. HTTP 2.0 no longer supports HTTP 1.1's chunked transfer encoding mechanism, as it provides its own, more efficient, mechanisms for data streaming.

  #### Remediation
  Set the `site_config.http2_enable` to `true`.

  Terraform example:
  ```
  resource "azurerm_app_service" "example" {
      name                = "example-app-service"
      location            = azurerm_resource_group.example.location
      resource_group_name = azurerm_resource_group.example.name
      app_service_plan_id = azurerm_app_service_plan.example.id

      site_config {
        dotnet_framework_version = "v4.0"
        scm_type                 = "LocalGit"
  +     http2_enabled            = true
      }
      ...
      ...
  }

  Using Console:
    1. Login to Azure Portal using https://portal.azure.com
    2. Go to `App Services`
    3. Click on each App
    4. Under `Setting` section, Click on `Configuration`
    5. Set `HTTP version` to `2.0` under `General settings`

  *NOTE:* Most modern browsers support HTTP 2.0 protocol over TLS only, while non- encrypted traffic continues to use HTTP 1.1. To ensure that client browsers connect to your app with HTTP/2, either buy an App Service Certificate for your app's custom domain or bind a third party certificate.

  Using Command Line:
  To set HTTP 2.0 version for an existing app, run the following command:

  ```
   az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> --http20-enabled true
  ```

  #### References
  * https://docs.microsoft.com/en-us/azure/security/benchmarks/security-controls-v2-endpoint-security
  * https://docs.microsoft.com/en-us/azure/app-service/web-sites-configure#general-settings
  * https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled
lwid:
  - Azure_CIS_131_9_9
provider: Azure
ruleId: CKV_AZURE_18
severity: Medium
sid: ckv-azure-18
title: Ensure that 'HTTP Version' is the latest if used to run the web app
