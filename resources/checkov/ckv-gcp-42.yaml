category: IAM
checkTool: checkov
checkType: Terraform
compliance:
- CIS
description: Ensure that Service Account has no Admin privileges
extra:
  entity: google_project_iam_member
  type: resource
guidelines: |-
  #### Description
  A service account is a special Google account that belongs to an application or a VM, instead of to an individual end-user. The application uses the service account to call the service's Google API so that users aren't directly involved. It's recommended not to use admin access for ServiceAccount.

  #### Rationale
  Service accounts represent service-level security of the Resources (application or a VM) which can be determined by the roles assigned to it. Enrolling ServiceAccount with Admin rights gives full access to an assigned application or a VM. A ServiceAccount Access holder can perform critical actions like delete, update change settings, etc. without user intervention. For this reason, it's recommended that service accounts not have Admin rights.

  #### Remediation
  User Managed (and not user-created) default service accounts have the `Editor (roles/editor)` role assigned to them to support GCP services they offer.

  By default, there are no roles assigned to `User Managed User created` service accounts.

  Terraform example
  ```
  resource "google_project_iam_member" "project" {
      project = "your-project-id"
  -   role    = "roles/editor"
  -   member  {
  -      serviceAccount: "xyz.iam.gserviceaccount.com"
  -   }
  +   role    = "roles/read-only"
  +   member  = "user:jane@example.com"

      ...
      ...
  }
  ```

  Using *Console*

  1. Go to [IAM & admin/IAM](https://console.cloud.google.com/iam-admin/iam)
  2. Go to the `Members`.
  3. Identify `User-Managed user created` service account with roles containing `*Admin` or `*admin` or role matching `Editor` or role matching `Owner`.
  4. Click the `Delete bin` icon to remove the role from the member (service account in this case).

  Using *CLI*

  1. Using a text editor, Remove `Role` which contains `roles/*Admin` or `roles/*admin` or matched `roles/editor` or matches `roles/owner`. Add a role to the bindings array that defines the group members and the role for those members.

  For example, to grant the role roles/appengine.appViewer to the `ServiceAccount` which is roles/editor, you would change the example shown below as follows:

  ```
  {
    "bindings": [{
       "members": [ "serviceAccount:our-project-123@appspot.gserviceaccount.com",
    ],
    "role": "roles/appengine.appViewer" },
    {
        "members": ["user:email1@gmail.com"],
        "role": "roles/owner"
    },
    {
      "members": [ "serviceAccount:our-project-123@appspot.gserviceaccount.com", "serviceAccount:123456789012-compute@developer.gserviceaccount.com"],
      "role": "roles/editor"
    }],
    "etag": "BwUjMhCsNvY="
  }
  ```
  2. Update the project's IAM policy:
  ```
  gcloud projects set-iam-policy PROJECT_ID iam.json
  ```

  #### Impact
  Removing `*Admin` or `*admin` or `Editor` or `Owner` role assignments from service accounts may break functionality that uses impacted service accounts. Required role(s) should be assigned to impacted service accounts in order to restore broken functionalities.

  #### References
  * https://cloud.google.com/sdk/gcloud/reference/iam/service-accounts/
  * https://cloud.google.com/iam/docs/understanding-roles
  * https://cloud.google.com/iam/docs/understanding-service-accounts
  * https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam#member/members
lwid:
  - GCP_CIS12_1_5
  - GCP_CIS_1_4
provider: GCP
ruleId: CKV_GCP_42
severity: High
sid: ckv-gcp-42
title: Ensure that Service Account has no Admin privileges
